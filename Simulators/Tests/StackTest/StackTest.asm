// filepath /Users/trebor/Desktop/nand2tetris/projects/07/StackArithmetic/StackTest/StackTest.vm (Line 0)
// push constant 17 (Line 8)
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17 (Line 9)
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq (Line 10)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@EQ.StackTest.10
D;JEQ
@XX.StackTest.10
D=0;JMP
(EQ.StackTest.10)
D=-1
(XX.StackTest.10)
@SP
A=M-1
M=D
// push constant 17 (Line 11)
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16 (Line 12)
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq (Line 13)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@EQ.StackTest.13
D;JEQ
@XX.StackTest.13
D=0;JMP
(EQ.StackTest.13)
D=-1
(XX.StackTest.13)
@SP
A=M-1
M=D
// push constant 16 (Line 14)
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17 (Line 15)
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq (Line 16)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@EQ.StackTest.16
D;JEQ
@XX.StackTest.16
D=0;JMP
(EQ.StackTest.16)
D=-1
(XX.StackTest.16)
@SP
A=M-1
M=D
// push constant 892 (Line 17)
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891 (Line 18)
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt (Line 19)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@LT.StackTest.19
D;JLT
@XX.StackTest.19
D=0;JMP
(LT.StackTest.19)
D=-1
(XX.StackTest.19)
@SP
A=M-1
M=D
// push constant 891 (Line 20)
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892 (Line 21)
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt (Line 22)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@LT.StackTest.22
D;JLT
@XX.StackTest.22
D=0;JMP
(LT.StackTest.22)
D=-1
(XX.StackTest.22)
@SP
A=M-1
M=D
// push constant 891 (Line 23)
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891 (Line 24)
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt (Line 25)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@LT.StackTest.25
D;JLT
@XX.StackTest.25
D=0;JMP
(LT.StackTest.25)
D=-1
(XX.StackTest.25)
@SP
A=M-1
M=D
// push constant 32767 (Line 26)
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766 (Line 27)
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt (Line 28)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@GT.StackTest.28
D;JGT
@XX.StackTest.28
D=0;JMP
(GT.StackTest.28)
D=-1
(XX.StackTest.28)
@SP
A=M-1
M=D
// push constant 32766 (Line 29)
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767 (Line 30)
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt (Line 31)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@GT.StackTest.31
D;JGT
@XX.StackTest.31
D=0;JMP
(GT.StackTest.31)
D=-1
(XX.StackTest.31)
@SP
A=M-1
M=D
// push constant 32766 (Line 32)
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766 (Line 33)
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt (Line 34)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@GT.StackTest.34
D;JGT
@XX.StackTest.34
D=0;JMP
(GT.StackTest.34)
D=-1
(XX.StackTest.34)
@SP
A=M-1
M=D
// push constant 57 (Line 35)
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31 (Line 36)
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53 (Line 37)
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add (Line 38)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D+M
@SP
A=M-1
M=D
// push constant 112 (Line 39)
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub (Line 40)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D-M
@SP
A=M-1
M=D
// neg (Line 41)
@SP
A=M-1
M=-M
// and (Line 42)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D&M
@SP
A=M-1
M=D
// push constant 82 (Line 43)
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or (Line 44)
@SP
AM=M-1
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
D=D|M
@SP
A=M-1
M=D
// not (Line 45)
@SP
A=M-1
M=!M
// end of program
@.STOP
(.STOP)
0;JMP
